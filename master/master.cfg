# -*- python -*-
# ex: set syntax=python:

from buildbot.plugins import buildslave, schedulers, status, steps, util
from buildbot.status import html, web

from .custom import GithubCreateEventHandler


c = BuildmasterConfig = {}

####### BUILDSLAVES

c['slaves'] = [
    buildslave.BuildSlave(
        'worker-amd64', '$password', properties={
            'dput_method': 'local',
        }),
    buildslave.BuildSlave(
        'worker-armhf', '$password', properties={
            'dput_method': 'remote',
        }),
    ]

c['protocols'] = {'pb': {'port': 9989}}

####### SCHEDULERS

c['schedulers'] = [
    schedulers.ForceScheduler(
        name='force',
        builderNames=[
            'build-amd64-pkg',
            'build-armhf-pkg',
            'build-i386-pkg',
            ]),
    schedulers.AnyBranchScheduler(
        name='tags',
        categories=['new-tag'],
        builderNames=[
            'build-amd64-pkg',
            'build-armhf-pkg',
            'build-i386-pkg',
            ]),
    ]

####### BUILDERS

pkg_factory = util.BuildFactory()
pkg_factory.addStep(steps.Git(
    repourl='https://github.com/ideascube/ideascube.git',
    mode='incremental', branch='master'))
pkg_factory.addStep(steps.ShellCommand(
    command=[
        'sudo', 'sbuild-update', '--update', '--dist-upgrade', '--clean',
        '--autoclean', '--autoremove',
        util.Interpolate('jessie-%(prop:arch)s-sbuild'),
        ]))
pkg_factory.addStep(steps.ShellCommand(
    timeout=3600, command=[
        'sbuild', '--source', '--dist=jessie',
        util.Interpolate('--arch=%(prop:arch)s'),
        '--build-dep-resolver=aptitude',
        '--extra-repository=deb http://ftp.fr.debian.org/debian jessie-backports main',
        ]))
pkg_factory.addStep(steps.ShellCommand(command=[
    'dput', util.Interpolate('%(prop:dput_method)s'),
    util.Interpolate('%(prop:workdir)s/ideascube_%(prop:branch)s_%(prop:arch)s.changes'),
    ]))

c['builders'] = [
    util.BuilderConfig(
        name='build-amd64-pkg', slavenames=['worker-amd64'],
        factory=pkg_factory,
        properties={'arch': 'amd64'}),
    util.BuilderConfig(
        name='build-armhf-pkg', slavenames=['worker-armhf'],
        factory=pkg_factory,
        properties={'arch': 'armhf'}),
    util.BuilderConfig(
        name='build-i386-pkg', slavenames=['worker-amd64'],
        factory=pkg_factory,
        properties={'arch': 'i386'}),
    ]

####### STATUS TARGETS

authz_cfg = web.authz.Authz(
    auth=web.auth.BasicAuth([('$admin_login', '$admin_password')]), forceBuild='auth',
    forceAllBuilds='auth', gracefulShutdown=False, pingBuilder=False,
    stopBuild='auth', stopAllBuilds=False, cancelPendingBuild=False)

c['status'] = [
    html.WebStatus(
        http_port=8010, authz=authz_cfg,
        change_hook_dialects={
            'github': {
                'class': GithubCreateEventHandler,
                'secret': '$secret',
                'strict': True,
                },
            },
        ),
    status.IRC(
        'chat.freenode.net', 'SueEllen', useColors=True,
        channels=[
            {'channel': '#ideascube'},
            ],
        notify_events={
            'started': 1,
            'finished': 1,
            'success': 1,
            'failure': 1,
            },
        ),
    ]

####### PROJECT IDENTITY

c['title'] = 'Ideascube'
c['titleURL'] = 'https://github.com/ideascube'
c['buildbotURL'] = 'http://buildbot.ideascube.org/'

####### DB URL

c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}
